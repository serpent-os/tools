[workspace]
members = ["boulder", "moss", "crates/*"]
default-members = ["moss"]
resolver = "2"

[workspace.package]
version = "0.25.1"
edition = "2021"
rust-version = "1.80"

[workspace.dependencies]
blsforme = { git = "https://github.com/serpent-os/blsforme.git", rev = "3cb315d6e9b4f2168927bded8b326b55c92f0e84" }
bytes = "1.6.0"
chrono = "0.4.38"
clap = { version = "4.5.8", features = ["derive", "string"] }
clap_complete = "4.5.37"
clap_mangen = "0.2.24"
criterion = { version = "0.5.1", features = ["html_reports"] }
crossterm = "0.28.1"
derive_more = { version = "1.0.0", features = [
    "as_ref",
    "display",
    "from",
    "into",
] }
dialoguer = "0.11.0"
diesel = { version = "2.2.1", features = [
    "sqlite",
    "returning_clauses_for_sqlite_3_35",
] }
diesel_migrations = "2.2.0"
dirs = "6.0.0"
elf = "0.7.4"
indicatif = "0.17.8"
itertools = "0.14.0"
fs-err = { version = "3.1.0", features = ["tokio"] }
futures-util = "0.3.31"
glob = "0.3.1"
hex = "0.4.3"
indextree = "4.6.1"
libsqlite3-sys = { version = "0.30.1", features = ["bundled"] }
log = "0.4.22"
nom = "7.1.3"
nix = { version = "0.29.0", features = [
    "user",
    "fs",
    "sched",
    "process",
    "mount",
    "hostname",
    "signal",
    "term",
] }
petgraph = "0.7.1"
rayon = "1.10.0"
regex = "1.10.5"
reqwest = { version = "0.12.5", default-features = false, features = [
    "brotli",
    "charset",
    "deflate",
    "gzip",
    "http2",
    "rustls-tls",
    "stream",
    "zstd",
    "blocking",
    "json",
] }
serde = { version = "1.0.204", features = ["derive"] }
serde_json = "1.0.120"
serde_yaml = "0.9.34"
sha2 = "0.10.8"
strum = { version = "0.26.3", features = ["derive"] }
thiserror = "2.0.3"
thread-priority = "1.1.0"
tokio = { version = "1.38.0", features = ["full"] }
tokio-stream = { version = "0.1.15", features = ["time"] }
tokio-util = { version = "0.7.11", features = ["io"] }
url = { version = "2.5.2", features = ["serde"] }
xxhash-rust = { version = "0.8.11", features = ["xxh3"] }
zstd = { version = "0.13.2", features = ["zstdmt"] }
mailparse = "0.15.0"
zbus = "5.1.1"

[workspace.lints.rust]
rust_2018_idioms = { level = "warn", priority = -1 }
semicolon_in_expressions_from_macros = "warn"
unused_import_braces = "warn"
unused_qualifications = "warn"

[workspace.lints.clippy]
branches_sharing_code = "warn"
cloned_instead_of_copied = "warn"
disallowed_types = "warn"
empty_line_after_outer_attr = "warn"
inefficient_to_string = "warn"
macro_use_imports = "warn"
map_flatten = "warn"
missing_enforced_import_renames = "warn"
mut_mut = "warn"
nonstandard_macro_braces = "warn"
semicolon_if_nothing_returned = "warn"
str_to_string = "warn"
uninlined_format_args = "warn"
unreadable_literal = "warn"
wildcard_imports = "warn"

# has false positives in indicatif usage
literal_string_with_formatting_args = "allow"

[profile.release]
lto = "thin"

[profile.packaging]
inherits = "release"
lto = true
codegen-units = 1
opt-level = 3
# allow packaging system to do it
strip = "none"
debug = true

# We want people who use the onboarding steps to get a nice compromise
# between fast compilation and fast runtime, but with checks in place
# and full backtraces. Hyperfine tests shows opt-level = 1 to be a good
# compromise between compile speed and runtime speed.
[profile.onboarding]
inherits = "dev"
opt-level = 1
lto = "thin"
debug = true
strip = "none"
